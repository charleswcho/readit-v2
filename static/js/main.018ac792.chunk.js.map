{"version":3,"sources":["components/Post/Upvotes.jsx","components/Post/Post.jsx","components/Posts/Posts.jsx","utils/useDataApi.js","components/App.js","index.js"],"names":["Upvotes","ups","isMobile","iconFontSize","fontSize","className","variant","gutterBottom","toLocaleString","Post","post","idx","thumbnail","permalink","url","title","author","subreddit","useMediaQuery","showThumbnail","match","key","href","target","rel","src","alt","Posts","posts","loading","handleScrollBottom","onScroll","scrollHeight","scrollTop","clientHeight","map","useDataApi","initialUrl","initialData","useState","setUrl","data","setData","setLoading","error","setError","useEffect","a","fetch","res","json","propTypes","PropTypes","string","isRequired","shape","App","filter","setFilter","children","getData","count","setCount","child","position","value","onChange","event","before","after","color","_","newValue","icon","label","theme","createMuiTheme","palette","type","primary","main","typography","useNextVariants","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.018ac792.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Typography from '@material-ui/core/Typography';\n\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\n\nimport './Upvotes.sass';\n\nfunction Upvotes({ ups, isMobile }) {\n  const iconFontSize = isMobile ? 'inherit' : 'small';\n  const fontSize = isMobile ? 'caption' : 'body1';\n\n  return (\n    <div className=\"upvotes\">\n      <ArrowUpwardIcon className=\"upvote-icon\" fontSize={iconFontSize} />\n\n      <Typography variant={fontSize} gutterBottom>\n        {ups.toLocaleString()}\n      </Typography>\n    </div>\n  );\n}\n\nUpvotes.propTypes = {\n  ups: PropTypes.number.isRequired,\n  isMobile: PropTypes.bool.isRequired,\n};\n\nexport default Upvotes;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { unstable_useMediaQuery as useMediaQuery } from '@material-ui/core/useMediaQuery';\nimport Typography from '@material-ui/core/Typography';\n\nimport Upvotes from './Upvotes';\n\nimport './Post.sass';\n\nconst Post = ({ post, idx }) => {\n  const { thumbnail, ups, permalink, url, title, author, subreddit } = post;\n  const isMobile = useMediaQuery('(max-width:600px)');\n  const showThumbnail = thumbnail.match(/(http(s?):)([/|.|\\w|\\s|-])*\\.(?:jpg|gif|png)/g);\n\n  return (\n    <li key={idx} className=\"post\">\n      <div className=\"metrics\">\n        {!isMobile && <Upvotes ups={ups} isMobile={isMobile} />}\n\n        {showThumbnail ? (\n          <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n            <img className=\"thumbnail\" src={thumbnail} alt=\"thumbnail\" />\n          </a>\n        ) : null}\n      </div>\n\n      <div className=\"content\">\n        <div className=\"title\">\n          <a href={`https://www.reddit.com${permalink}`} target=\"_blank\" rel=\"noopener noreferrer\">\n            <Typography variant=\"body2\" gutterBottom>\n              {title}\n            </Typography>\n          </a>\n        </div>\n\n        <div className=\"under\">\n          <div className=\"author\">\n            <Typography variant=\"caption\" gutterBottom>\n              by\n              <a\n                href={`https://www.reddit.com/user/${author}`}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                {' '}\n                {author}\n              </a>\n            </Typography>\n          </div>\n\n          <div className=\"subreddit\">\n            <Typography variant=\"caption\" gutterBottom>\n              to\n              <a\n                href={`https://www.reddit.com/r/${subreddit}`}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                {' '}\n                {subreddit}\n              </a>\n            </Typography>\n          </div>\n        </div>\n\n        {isMobile && <Upvotes ups={ups} isMobile={isMobile} />}\n      </div>\n    </li>\n  );\n};\n\nPost.propTypes = {\n  post: PropTypes.shape({\n    thumbnail: PropTypes.string.isRequired,\n    ups: PropTypes.string.isRequired,\n    permalink: PropTypes.string.isRequired,\n    url: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    author: PropTypes.string.isRequired,\n    subreddit: PropTypes.string.isRequired,\n  }).isRequired,\n  idx: PropTypes.number.isRequired,\n};\n\nexport default Post;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport Post from '../Post/Post';\n\nimport './Posts.sass';\n\nfunction Posts({ posts, loading, handleScrollBottom }) {\n  function handleScrollEvent({ target }) {\n    if (target.scrollHeight - target.scrollTop === target.clientHeight) {\n      handleScrollBottom();\n    }\n  }\n\n  return loading ? (\n    <div className=\"loading-page\">\n      <CircularProgress />\n    </div>\n  ) : (\n    <ul className=\"posts\" onScroll={handleScrollEvent}>\n      {posts.map((post, idx) => (\n        <Post post={post} idx={idx} />\n      ))}\n    </ul>\n  );\n}\n\nPosts.propTypes = {\n  posts: PropTypes.arrayOf(\n    PropTypes.shape({\n      thumbnail: PropTypes.string.isRequired,\n      ups: PropTypes.number.isRequired,\n      permalink: PropTypes.string.isRequired,\n      url: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n      author: PropTypes.string.isRequired,\n      subreddit: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  loading: PropTypes.bool.isRequired,\n  handleScrollBottom: PropTypes.func.isRequired,\n};\n\nexport default Posts;\n","import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nconst useDataApi = (initialUrl, initialData) => {\n  const [url, setUrl] = useState(initialUrl);\n  const [data, setData] = useState(initialData);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    (async () => {\n      setLoading(true);\n      setError(false);\n\n      try {\n        const res = await fetch(url);\n        const json = await res.json();\n\n        setData(json.data);\n      } catch (err) {\n        setError(err);\n      }\n\n      setLoading(false);\n    })();\n  }, [url]);\n\n  return [data, loading, error, setUrl];\n};\n\nuseDataApi.propTypes = {\n  initialUrl: PropTypes.string.isRequired,\n  initialData: PropTypes.shape.isRequired,\n};\n\nexport default useDataApi;\n","import React, { useState } from 'react';\n\nimport { unstable_useMediaQuery as useMediaQuery } from '@material-ui/core/useMediaQuery';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nimport StarIcon from '@material-ui/icons/Star';\nimport TrendingUpIcon from '@material-ui/icons/TrendingUp';\nimport NewReleasesIcon from '@material-ui/icons/NewReleases';\n\nimport Posts from './Posts/Posts';\n\nimport useDataApi from '../utils/useDataApi';\n\nimport './App.sass';\n\nfunction App() {\n  const isMobile = useMediaQuery('(max-width: 600px)');\n  const [filter, setFilter] = useState('best');\n  const [data, loading, , getData] = useDataApi('https://www.reddit.com/best.json', {\n    children: [],\n  });\n  const [count, setCount] = useState(25);\n  const posts = data.children.map((child) => child.data);\n\n  const handleSelectChange = (event) => {\n    setFilter(event.target.value);\n\n    getData(`https://www.reddit.com/${event.target.value}.json`);\n    setCount(25);\n  };\n\n  const handleTabChange = (_, newValue) => {\n    setFilter(newValue);\n\n    getData(`https://www.reddit.com/${newValue}.json`);\n    setCount(25);\n  };\n\n  const handleScrollBottom = () => {\n    const before = data.before ? `&before${data.before}` : '';\n\n    getData(`https://www.reddit.com/hot.json?after=${data.after}${before}&count=${count}`);\n    setCount(count + 25);\n  };\n\n  return (\n    <div className=\"App\">\n      {!isMobile && (\n        <AppBar position=\"static\">\n          <Toolbar className=\"toolbar\">\n            <a href=\"/\">\n              <Typography variant=\"h6\">Readit</Typography>\n            </a>\n\n            <FormControl>\n              <Select value={filter} onChange={handleSelectChange}>\n                <MenuItem value=\"best\">\n                  <StarIcon className=\"select-icon\" fontSize=\"small\" /> Best\n                </MenuItem>\n                <MenuItem value=\"hot\">\n                  <TrendingUpIcon className=\"select-icon\" fontSize=\"small\" />\n                  Hot\n                </MenuItem>\n                <MenuItem value=\"new\">\n                  <NewReleasesIcon className=\"select-icon\" fontSize=\"small\" />\n                  New\n                </MenuItem>\n              </Select>\n            </FormControl>\n          </Toolbar>\n        </AppBar>\n      )}\n\n      <Posts posts={posts} loading={loading} handleScrollBottom={handleScrollBottom} />\n\n      {isMobile && (\n        <AppBar position=\"fixed\" color=\"primary\" className=\"app-bar\">\n          <Tabs variant=\"fullWidth\" value={filter} onChange={handleTabChange}>\n            <Tab value=\"best\" icon={<StarIcon />} label=\"Best\" />\n            <Tab value=\"hot\" icon={<TrendingUpIcon />} label=\"Hot\" />\n            <Tab value=\"new\" icon={<NewReleasesIcon />} label=\"New\" />\n          </Tabs>\n        </AppBar>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nimport './index.sass';\nimport App from './components/App';\n\nconst theme = createMuiTheme({\n  palette: {\n    type: 'dark',\n    primary: {\n      // light: will be calculated from palette.primary.main,\n      main: '#0080ff',\n      // dark: will be calculated from palette.primary.main,\n      // contrastText: will be calculated to contrast with palette.primary.main\n    },\n    // divider: '#1d2731',\n    // background: '#0080ff'\n  },\n  typography: { useNextVariants: true },\n});\n\nReactDOM.render(\n  <MuiThemeProvider theme={theme}>\n    <CssBaseline />\n    <App />\n  </MuiThemeProvider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}